# This file controls what data is extracted from PUDL and how it is processed.

########################################################################
# Multi-scenario/period parameters
########################################################################

# Model year(s) and first planning year(s)
# Each of these parameters should be a list.
# - "model_year": The final year in each planning period, used to calculate load
# profiles, etc
# - "model_first_planning_year": The first year of each planning period. Capex for
# new-build generators from ATB are an average of costs from first to last (inclusive).
model_year: [2030, 2045]
model_first_planning_year: [2020, 2031]


# The location and name of additional input files needed to create outputs
input_folder: extra_inputs # Subfolder directly below the location of this settings file
case_id_description_fn: test_case_id_description.csv # Match the case_id with longer case_name
scenario_definitions_fn: test_scenario_inputs_short.csv # Define policy/cost scenarios for each case
# scenario_definitions_fn: test_scenario_inputs.csv # Define policy/cost scenarios for each case
distributed_gen_profiles_fn: test_dg_profiles.csv # Hourly profiles of distributed gen by region
# demand_response_fn: test_ev_load_shifting.csv # Load profiles of DR resources by model_year and scenario
emission_policies_fn: test_rps_ces_emission_limits.csv # Emission policies for each model_year/region/case_id
capacity_limit_spur_fn: test_resource_capacity_spur.csv # Max capacity and spur line distance for each renewable resource
# region_wind_pv_cap_fn: existing_wind_pv_capacity.csv # Only use if your data is more up-to-date than PUDL
demand_segments_fn: test_demand_segments_voll.csv
misc_gen_inputs_fn: test_misc_gen_inputs.csv
genx_settings_folder: genx_settings
reserves_fn: Reserves.csv
# regional_load_fn: test_regional_load_profiles.csv #Externally provide load data

# If regional load is provided by the user and it already includes demand response
# loads, set this parameter to "true". If the regional hourly loads do not include
# demand response - the DR should be added to the load profiles - set to "~" (None) or
# "false".
regional_load_includes_demand_response: true


# Time clustering/reduction parameters
reduce_time_domain: true # If the generator and load profiles should be clustered
time_domain_periods: 4 # The number of periods/clusters
time_domain_days_per_period: 5 # The number of 24 hour days in each period/cluster
include_peak_day: true # If the system-wide peak load days should always be included
demand_weight_factor: 1 # Demand profiles are scaled from 0-1, then scaled up using this value.


# List the method to calculate total distributed generation in each region (not all
# regions need to be listed here). Both methods use a normalized profile in the file
# specified by "distributed_gen_profiles_fn". Values for each planning year/region
# should be included in the "distributed_gen_values" parameter.
# - "capacity": Use the capacity (MW) to scale up generation
# - "fraction_load": Distributed generation is a specific fraction of total load
distributed_gen_method:
  CA_N: capacity
  CA_S: capacity

# Values - either MW or fraction of load - matching the methods listed for each region
# in "distributed_gen_method". These can be varied by scenario by adding them to an
# associated scenario in "settings_management".
distributed_gen_values:
  2030:
    CA_N: 6699
    CA_S: 8636
  2045:
    CA_N: 9788
    CA_S: 12618

# Set this parameter to "true" if existing distributed generation in each region should
# be represented as a resource rather than being subtracted from demand.
dg_as_resource: true

# Distribution loss used when subtracting distributed generation from total load.
avg_distribution_loss: 0.0453


# Flexible loads associated with increased electrification can be included using data
# from NREL's EFS study (described below) or using user input files. This case study
# uses EFS data.

# Electrification scenarios are supplied in two files. EFS_STOCK_AGG.parquet has scenarios
# from the NREL Electrification Futures Study (EFS). SCENARIO_STOCK.parquet has scenarios
# from the Princeton Net Zero study. The scenario name will depend on which source you
# use. The NREL EFS scenarios include:

# HIGH ELECTRIFICATION - MODERATE TECHNOLOGY ADVANCEMENT
# MEDIUM ELECTRIFICATION - MODERATE TECHNOLOGY ADVANCEMENT
# REFERENCE ELECTRIFICATION - MODERATE TECHNOLOGY ADVANCEMENT

# The Princeton Net Zero scenarios include:

# current_policy
# stated_policy
# deep_decarbonization
# moderate_decarbonization

# The type of flexible loads that can be included as flexible demand resources (with hourly
# profiles from NREL EFS data) are:

# res_space_heat_cool (residential water heating)
# res_water_heat (commercial water heating)
# comm_space_heat_cool (residential space heating)
# comm_water_heat (commercial space heating)
# trans_light_duty (light duty vehicles)
# trans_medium_duty (medium duty vehicles)
# trans_heavy_duty (heavy duty vehicles)
# trans_bus (transit buses)


electrification_stock_fn: EFS_STOCK_AGG.parquet  # SCENARIO_STOCK.parquet
electrification_scenario: REFERENCE ELECTRIFICATION - MODERATE TECHNOLOGY ADVANCEMENT # current_policy
# Name of the flexible resource, fraction of load that can be shifted, and model-specific
# parameters that will be applied to each resource.
flexible_demand_resources:
  2030:
    trans_light_duty:
      fraction_shiftable: 0.8
      parameter_values:
        Max_Flexible_Demand_Delay: 5
        FLEX: 1
        Flexible_Demand_Energy_Eff: 1
    res_water_heat:
      fraction_shiftable: 0.1
      parameter_values:
        Max_Flexible_Demand_Delay: 2
        FLEX: 1
        Flexible_Demand_Energy_Eff: 1
  2045:
    trans_light_duty:
      fraction_shiftable: 0.8
      parameter_values:
        Max_Flexible_Demand_Delay: 5
        FLEX: 1
    res_water_heat:
      fraction_shiftable: 0.25
      parameter_values:
        Max_Flexible_Demand_Delay: 2
        FLEX: 1
        Flexible_Demand_Energy_Eff: 1

# Transmission financial information to calculate annual investment costs
# capex_mw_mile: Capital cost per MW-mile for all (numeric) or each model region (dict).
# WACC and investment years from https://www.sciencedirect.com/science/article/abs/pii/S0301421519305816
transmission_investment_cost:
  # If true, uses interconnect_annuity when available
  use_total: true
  spur:
    capex_mw_mile:
      CA_N: 8775 # 2.5x the rest of WECC
      CA_S: 8775 # 2.5x the rest of WECC
      WECC_AZ: 3900
    wacc: 0.044
    investment_years: 60
  offshore_spur:
    # If missing, NREL ATB capex_mw_mile is used
    capex_mw_mile:
    wacc: 0.044
    investment_years: 60
  tx:
    capex_mw_mile:
      CA_N: 3037.5 # 2.5x the rest of WECC
      CA_S: 3037.5 # 2.5x the rest of WECC
      WECC_AZ: 1350
    wacc: 0.044
    investment_years: 60

# Percent expansion in planning period above and beyond existing transmission
tx_expansion_per_period: 1.0

tx_line_loss_100_miles: 0.01

partial_ces: false

###############
# Changes to settings parameters for different years/cases.

# This is a nested dictionary of settings changes for each scenario defined in the
# "scenario_definitions_fn" file.
# - The fist set of keys are planning years.
# - The second set of keys are either "all_cases" or the name of a scenario in the
# "scenario_definitions_fn" file. If "all_cases" then the settings key: value will be
# applied to all settings files for that year. An example scenario might be "ccs_capex".
# - The third set of keys are names of scenario values. For a "ccs_capex" scenario these
# might be "high", "mid", "low".
# - The values under this third set of keys are a key: value pair where the key is a
# parameter from this settings file with a value that should be modified for a specific
# case.
settings_management:
  2030:
    conv_hydro_rps_eligible:
      no:
        model_tag_values:
          ESR_1:
            Conventional Hydroelectric: 0
      yes:
        model_tag_values:
          ESR_1:
            Conventional Hydroelectric: 1
    tx_expansion:
      high:
        tx_expansion_per_period: 1.0
      limited:
        tx_expansion_per_period: 0.25
    growth:
      normal: ~
        # alt_growth_rate: ~
          # WECC_AZ: 0.02
      half_wecc:
        default_growth_rates:
          WECC_California: 0.0015 # 0.003
    ng_price:
      reference:
        aeo_fuel_scenarios:
          naturalgas: reference
      low:
        aeo_fuel_scenarios:
          naturalgas: high_resource
      high:
        aeo_fuel_scenarios:
          naturalgas: low_resource
    ccs_capex:
      mid:
        atb_modifiers:
          ngccccs:
            technology: NaturalGas
            tech_detail: CCCCSAvgCF
            capex_mw: [mul, 1]
          NGCCS100:
            technology: NaturalGas
            tech_detail: CCS100
            capex_mw: [mul, 1]
      low:
        atb_modifiers:
          ngccccs:
            technology: NaturalGas
            tech_detail: CCCCSAvgCF
            capex_mw: [mul, 0.85]
          NGCCS100:
            technology: NaturalGas
            tech_detail: CCS100
            capex_mw: [mul, 0.85]
      high:
        atb_modifiers:
          ngccccs:
            technology: NaturalGas
            tech_detail: CCCCSAvgCF
            capex_mw: [mul, 1.2]
          NGCCS100:
            technology: NaturalGas
            tech_detail: CCS100
            capex_mw: [mul, 1.2]
    renewable_capex:
      mid:
        atb_new_gen:
          - [NaturalGas, CCCCSAvgCF, Conservative, 500] # ATB CCCCS conservative case represents current technology.
          - [NaturalGas, CCAvgCF, Moderate, 500]
          - [NaturalGas, CTAvgCF, Moderate, 100]
          - [LandbasedWind, Class1, Moderate, 1]
          - [OffShoreWind, Class10, Moderate, 1]
          - [UtilityPV, Class1, Moderate, 1]
          - [Battery, "*", Moderate, 1]
      low:
        atb_new_gen:
          - [NaturalGas, CCCCSAvgCF, Conservative, 500] # ATB CCCCS conservative case represents current technology.
          - [NaturalGas, CCAvgCF, Moderate, 500]
          - [NaturalGas, CTAvgCF, Moderate, 100]
          - [LandbasedWind, Class1, Advanced, 1]
          - [OffShoreWind, Class10, Advanced, 1]
          - [UtilityPV, Class1, Advanced, 1]
          - [Battery, "*", Advanced, 1]
    nuclear_capex:
      mid:
        additional_new_gen:
          - Nuclear_mid
      low:
        additional_new_gen:
          - Nuclear_low
    ca_nuclear_allowed:
      no:
        regional_tag_values:
          CA_S:
            New_Build:
              Nuclear: 0
          CA_N:
            New_Build:
              Nuclear: 0
      yes:
        regional_tag_values:
          WECC_AZ:
            New_Build:
              NaturalGas_CCCCS: 0
          CA_S:
            New_Build:
              Nuclear: 1
          CA_N:
            New_Build:
              Nuclear: 1
  2045:
    conv_hydro_rps_eligible:
      no:
        model_tag_values:
          ESR_1:
            Conventional Hydroelectric: 0
      yes:
        model_tag_values:
          ESR_1:
            Conventional Hydroelectric: 1
    tx_expansion:
      high:
        tx_expansion_per_period: 1.0
      limited:
        tx_expansion_per_period: 0.25
    growth:
      normal:
        alt_num_clusters:
          CA_S:
            Conventional Steam Coal: 0
          WECC_AZ:
            Natural Gas Fired Combined Cycle: 1
      half:
        default_growth_rates:
          WECC_California: 0.0015 # 0.003
        alt_num_clusters:
          CA_S:
            Conventional Steam Coal: 0
          WECC_AZ:
            Natural Gas Fired Combined Cycle: 1
    ng_price:
      reference:
        aeo_fuel_scenarios:
          naturalgas: reference
      low:
        aeo_fuel_scenarios:
          naturalgas: high_resource
      high:
        aeo_fuel_scenarios:
          naturalgas: low_resource
    ccs_capex:
      mid:
        atb_modifiers:
          ngccccs:
            technology: NaturalGas
            tech_detail: CCCCSAvgCF
            capex_mw: [mul, 1]
          NGCCS100:
            technology: NaturalGas
            tech_detail: CCS100
            capex_mw: [mul, 1]
      low:
        atb_modifiers:
          ngccccs:
            technology: NaturalGas
            tech_detail: CCCCSAvgCF
            capex_mw: [mul, 0.8]
          NGCCS100:
            technology: NaturalGas
            tech_detail: CCS100
            capex_mw: [mul, 0.8]
      high:
        atb_modifiers:
          ngccccs:
            technology: NaturalGas
            tech_detail: CCCCSAvgCF
            capex_mw: [mul, 1.15]
          NGCCS100:
            technology: NaturalGas
            tech_detail: CCS100
            capex_mw: [mul, 1.15]
    renewable_capex:
      mid:
        atb_new_gen:
          - [NaturalGas, CCCCSAvgCF, Conservative, 500] # ATB CCCCS conservative case represents current technology.
          - [NaturalGas, CCAvgCF, Moderate, 500]
          - [NaturalGas, CTAvgCF, Moderate, 100]
          - [LandbasedWind, Class1, Moderate, 1]
          - [OffShoreWind, Class10, Moderate, 1]
          - [UtilityPV, Class1, Moderate, 1]
          - [Battery, "*", Moderate, 1]
      low:
        atb_new_gen:
          - [NaturalGas, CCCCSAvgCF, Conservative, 500] # ATB CCCCS conservative case represents current technology.
          - [NaturalGas, CCAvgCF, Moderate, 500]
          - [NaturalGas, CTAvgCF, Moderate, 100]
          - [LandbasedWind, Class1, Advanced, 1]
          - [OffShoreWind, Class10, Advanced, 1]
          - [UtilityPV, Class1, Advanced, 1]
          - [Battery, "*", Advanced, 1]
    nuclear_capex:
      mid:
        additional_new_gen:
          - Nuclear_mid
      low:
        additional_new_gen:
          - Nuclear_low
    ca_nuclear_allowed:
      no:
        regional_tag_values:
          CA_S:
            New_Build:
              Nuclear: 0
          CA_N:
            New_Build:
              Nuclear: 0
      yes:
        regional_tag_values:
          WECC_AZ:
            New_Build:
              NaturalGas_CCCCS: 0
          CA_S:
            New_Build:
              Nuclear: 1
          CA_N:
            New_Build:
              Nuclear: 1


###########################################
# INDIVIDUAL SCENARIO/CASE SETTINGS
# The

# DATA YEAR
# Pick one or more years of generator data to use when creating clusters. If
# more than one year is used then things like heat rate will be calculated as the
# average (weighted by generation per year).
data_years:
  - 2020

target_usd_year: 2017

# HOURS OFFSET FROM UTC
# All time profile data are stored in UTC. Provide an offset for the model timezone.
# US East cost is UTC-5, Pacific is UTC-8
utc_offset: -8

# CAPACITY TYPE
capacity_col: winter_capacity_mw

# LABEL SMALL HYDRO
small_hydro: True
small_hydro_mw: 30
small_hydro_regions:
  - CA_N
  - CA_S

# Factors for calculating hydro energy to power ratio in GenX. The default factors is
# numeric and will be applied to all regions. The regional factors are a dictionary mapping
# model region names to specific regional factors. The factors are multiplied by average
# annual inflow rates to determine the rated number of hours of reservoir hydro
# storage at peak discharge power output.
hydro_factor: 2

regional_hydro_factor:
  WECC_PNW: 4
  WECC_N: 4

# REGIONS
# Select the regions and any regional aggregations that should be performed.
# This currenly only works for IPM regions, either as the regions used in GenX or as
# aggregations.

# Can use this to rename (expand)

model_regions:
  - CA_N
  - CA_S
  - WECC_AZ

# Comment out this setting if no aggregated regions are included in the study.
region_aggregations:
  CA_N: [WEC_CALN, WEC_BANC]
  CA_S: [WEC_LADW, WECC_SCE, WEC_SDGE, WECC_IID]


regional_capacity_reserves:
  CapRes_1:
    CA_N: 0.137
    CA_S: 0.137
  CapRes_2:
    WECC_AZ: 0.1

cap_res_network_derate_default: 0.95


# CLUSTERING
# Existing thermal power plants are clusted to reduce the number of distinct plants.
# The existing method (for now) is to specify the number of clusters for each type
# of thermal plant as a default and then specify specific values for any regions
# that are different.

# Won't show up if not listed here (expand)
cluster_method: kmeans

# ** Any technologies not included in num_clusters will be omitted **
num_clusters:
  Conventional Steam Coal: 1
  Natural Gas Fired Combined Cycle: 1
  Natural Gas Fired Combustion Turbine: 1
  Nuclear: 1
  Conventional Hydroelectric: 1
  Wood/Wood Waste Biomass: 1
  Natural Gas Internal Combustion Engine: 1
  Natural Gas Steam Turbine: 1
  Geothermal: 1
  Solar Photovoltaic: 1
  Onshore Wind Turbine: 1
  Offshore Wind Turbine: 1
  # Solar Thermal with Energy Storage: 1
  # Solar Thermal without Energy Storage: 1
  Small Hydroelectric: 1
  Petroleum Liquids: 1
  Landfill Gas: 1
  Municipal Solid Waste: 1
  Other Waste Biomass: 1
  Hydroelectric Pumped Storage: 1
  Biomass: 1
  Other_peaker: 1

alt_cluster_method: ~

cluster_by_owner_regions: ~

# Group these technologies
group_technologies: True
tech_groups:
  Biomass:
    - Wood/Wood Waste Biomass
    - Landfill Gas
    - Municipal Solid Waste
    - Other Waste Biomass
  Other_peaker:
    - Natural Gas Internal Combustion Engine
    - Petroleum Liquids

# Use this to avoid grouping technologies in some regions
regional_no_grouping: ~

# Add code to ensure region names here are included above
alt_num_clusters:
  CA_S:
    Conventional Steam Coal: 0
  WECC_AZ:
    Natural Gas Fired Combined Cycle: 3

# CAPACITY FACTOR
# Calculate the capacity factor of technology types listed here. If derate_capacity is
# True, multiply the calculated capacity of each cluster by the CF
capacity_factor_techs:
  - Small Hydroelectric
  - Biomass
  - Geothermal

# Default value to limit the years used to calculate capacity factors.
# Use "~" (null, converted to None in Python) to use all data years. PUDL currently has
# generation data from 2011 through the most recent final release of 923/860.
capacity_factor_default_year_filter: [2016, 2017]

# Select the year filters for specific technologies. Grouped technologies should be
# used rather than in individual categories (e.g. Peaker rather than Combustion Turbine).
# Again, use "~" to use all years.
alt_year_filters:
  Small Hydroelectric: ~
  Conventional Hydroelectric: ~
  Biomass: ~
  Geothermal: ~

derate_capacity: True
derate_techs:
  - Small Hydroelectric
  - Biomass
  - Geothermal

# Energy storge duration. Provide a default value for existing resources of a given type.
# The value of 15.5 for pumped hydro comes from https://sandia.gov/ess-ssl/gesdb/public/statistics.html
# Default value can be numeric or a dictionary of region: numeric values. Technology names
# here and in the dataframe are both converted to snake case and matches are made if this
# name is contained in the dataframe technology name.
energy_storage_duration:
  Hydroelectric Pumped Storage: 15.5

# RETIREMENT AGES
# The age at which each technolgy type is expected to retire
# ********* IMPORTANT ****************
# If you are running a myopic model with multiple planning periods, age-based retirements
# between planning periods can change the units assigned to each cluster. In this situation
# the heat rates and O&M of a cluster will change because of the units it contains.
# Economic retirements of capacity from a cluster may not accurately represent the units
# that should be retired. To avoid this, set all retirement ages to a large value
# (e.g. 500).

retirement_ages:
  Conventional Hydroelectric: 500
  Small Hydroelectric: 500
  Conventional Steam Coal: 60
  Natural Gas Fired Combined Cycle: 40
  Natural Gas Fired Combustion Turbine: 40
  Petroleum Liquids: 40
  Natural Gas Internal Combustion Engine: 40
  Nuclear: 60
  Onshore Wind Turbine: 30
  Hydroelectric Pumped Storage: 500
  Natural Gas Steam Turbine: 40
  Solar Photovoltaic: 40
  Solar Thermal without Energy Storage: 40
  Geothermal: 100
  Municipal Solid Waste: 40
  Landfill Gas: 40
  Batteries: 40
  Wood/Wood Waste Biomass: 40
  Petroleum Coke: 40
  All Other: 40
  Natural Gas with Compressed Air Storage: 40
  Coal Integrated Gasification Combined Cycle: 40
  Other Waste Biomass: 40
  Other Gases: 40
  Other Natural Gas: 40
  Solar Thermal with Energy Storage: 40
  Flywheels: 40
  Offshore Wind Turbine: 30
  Hydrokinetic: 40


# CLUSTER TAGS
# All of the values will be 0 by default. If non-zero, add here.
# The names below are matched to technology names in the data ignoring case, whitespace,
# and underscores, and must only match the start of the technology name. Since e.g.
# "Natural Gas" will match any "Natural Gas *", more specific terms should be listed
# after more general terms ("Natural Gas CCS100: 0" should come after "Natural Gas: 1").

model_tag_names:
  - THERM
  - VRE
  - Num_VRE_Bins
  - MUST_RUN
  - STOR
  - FLEX
  - HYDRO
  - LDS
  - Commit
  - ESR_1
  - ESR_2
  - New_Build
  - Hydro_level
  - CapRes_1
  - CapRes_2
  - Hydro_Energy_to_Power_Ratio
  - MinCapTag_1
  - MinCapTag_2
  - Reg_Max
  - Rsv_Max

default_model_tag: 0

model_tag_values:
  THERM:
    # Biomass: 1
    # Biopower: 1
    Coal Integrated Gasification Combined Cycle: 1
    Conventional Steam Coal: 1
    CSP: 1
    # Geothermal: 1
    Landfill Gas: 1
    Municipal Solid Waste: 1
    Natural Gas: 1
    Natural Gas Fired Combined Cycle: 1
    Natural Gas Fired Combustion Turbine: 1
    Natural Gas Internal Combustion Engine: 1
    Natural Gas Steam Turbine: 1
    NGCCS100: 1
    Nuclear: 1
    Other Gases: 1
    Other Natural Gas: 1
    Other Waste Biomass: 1
    Other_peaker: 1 # Is there any way to do this based on the underlying categories?
    Petroleum Coke: 1
    Petroleum Liquids: 1
    Wood/Wood Waste Biomass: 1
  VRE:
    CSP: 1
    LandbasedWind: 1
    OffshoreWind: 1
    Onshore Wind: 1
    Solar Photovoltaic: 1
    Solar Thermal without Energy Storage: 1
    UtilityPV: 1
  Num_VRE_Bins:
    CSP: 1
    LandbasedWind: 1
    OffshoreWind: 1
    Onshore Wind: 1
    Solar Photovoltaic: 1
    Solar Thermal without Energy Storage: 1
    UtilityPV: 1
  NDISP:
    Biomass: 1
    Geothermal: 1
    Small Hydroelectric: 1
    Wood/Wood Waste Biomass: 1
  STOR:
    Battery: 1
    Hydroelectric Pumped Storage: 1
  FLEX:
    ev_load_shifting: 1
  HYDRO:
    Conventional Hydroelectric: 1
    Hydropower: 1
  Commit:
    Biomass: 1
    Biopower: 1
    Coal Integrated Gasification Combined Cycle: 1
    Conventional Steam Coal: 1
    Natural Gas: 1
    Natural Gas Fired Combined Cycle: 1
    Natural Gas Fired Combustion Turbine: 1
    Natural Gas Internal Combustion Engine: 1
    Natural Gas Steam Turbine: 1
    NGCCS100: 1
    Nuclear: 1
    Other_peaker : 1 # Is there any way to do this based on the underlying categories?
    Petroleum Coke: 1
    Petroleum Liquids: 1
  ESR_1:
    Biomass: 1
    Biopower: 1
    Conventional Hydroelectric: 0 # Need they key here to update value in 2045 cases
    CSP: 1
    Geothermal: 1
    LandbasedWind: 1
    OffshoreWind: 1
    Onshore Wind: 1
    Small Hydroelectric: 1
    Solar Photovoltaic: 1
    UtilityPV: 1
  ESR_2:
    Biomass: 1
    Biopower: 1
    Conventional Hydroelectric: 1
    CSP: 1
    Geothermal: 1
    LandbasedWind: 1
    Natural Gas CCS100: 1
    NGCCS100: 1
    Nuclear: 1
    OffshoreWind: 1
    Onshore Wind: 1
    Small Hydroelectric: 1
    Solar Photovoltaic: 1
    UtilityPV: 1
  MinCapTag_1: # Do not need to list anything here. All values will be 0 by default
    LandbasedWind: 1
  New_Build:
    Battery: 1
    Biomass: -1
    Biopower: 1
    Conventional Hydroelectric: -1
    Geothermal: -1
    LandbasedWind: 1
    Natural Gas: 1
    NGCCS100: 1
    OffshoreWind: 1
    Small Hydroelectric: -1
    UtilityPV: 1
    Nuclear_*: 1
  Hydro_level:
    Conventional Hydroelectric: 0.5
  CapRes_1:
    Conventional Steam Coal: 0.9
    Natural Gas Fired Combined Cycle: 0.9
    Natural Gas Fired Combustion Turbine: 0.9
    Petroleum Liquids: 0.9
    Natural Gas Internal Combustion Engine: 0.9
    Nuclear: 0.9
    Natural Gas Steam Turbine: 0.9
    Wood/Wood Waste Biomass: 0.9
    Petroleum Coke: 0.9
    Geothermal: 0.9
    Municipal Solid Waste: 0.9
    Landfill Gas: 0.9
    Coal Integrated Gasification Combined Cycle: 0.9
    Other Waste Biomass: 0.9
    Other Gases: 0.9
    Other Natural Gas: 0.9
    Other_peaker: 0.9 # Is there any way to do this based on the underlying categories?
    Biomass: 0.9
    NaturalGas_: 0.9
    Biopower_: 0.9
    Nuclear_: 0.9
    CSP_: 0.9
    NGCCS100: 0.9
    OffshoreWind: 0.8
    LandbasedWind: 0.8
    UtilityPV: 0.8
    Conventional Hydroelectric: 0.8
    Onshore Wind: 0.8
    Small Hydroelectric: 0.8
    Solar Photovoltaic: 0.8
    Battery: 0.95
    Hydroelectric Pumped Storage: 0.95
    ev_load_shifting: 0.95
  CapRes_2:
    Conventional Steam Coal: 0.9
    Natural Gas Fired Combined Cycle: 0.9
    Natural Gas Fired Combustion Turbine: 0.9
    Petroleum Liquids: 0.9
    Natural Gas Internal Combustion Engine: 0.9
    Nuclear: 0.9
    Natural Gas Steam Turbine: 0.9
    Wood/Wood Waste Biomass: 0.9
    Petroleum Coke: 0.9
    Geothermal: 0.9
    Municipal Solid Waste: 0.9
    Landfill Gas: 0.9
    Coal Integrated Gasification Combined Cycle: 0.9
    Other Waste Biomass: 0.9
    Other Gases: 0.9
    Other Natural Gas: 0.9
    Other_peaker: 0.9 # Is there any way to do this based on the underlying categories?
    Biomass: 0.9
    NaturalGas_: 0.9
    Biopower_: 0.9
    Nuclear_: 0.9
    CSP_: 0.9
    NGCCS100: 0.9
    OffshoreWind: 0.8
    LandbasedWind: 0.8
    UtilityPV: 0.8
    Conventional Hydroelectric: 0.8
    Onshore Wind: 0.8
    Small Hydroelectric: 0.8
    Solar Photovoltaic: 0.8
    Battery: 0.95
    Hydroelectric Pumped Storage: 0.95
    ev_load_shifting: 0.95
  MUST_RUN:
    Small Hydroelectric: 1
    Geothermal: 1
    Wood/Wood Waste Biomass: 1
    Biomass: 1
    distributed_generation: 1

# Tags for a technology in a specific region
# Format should be regional_tag_values: <region>: <tag name>: <technology>: <tag value>
# Technologies will be matched using str.contains(), so partial names can be included
# but they might unintentially map to other techs
regional_tag_values:
  CA_S:
    New_Build:
      Hydroelectric Pumped Storage: 1
      Nuclear: 0
    MinCapTag_2:
      UtilityPV: 1
  CA_N:
    New_Build:
      Nuclear: 0

MinCapReq:
  MinCapTag_1:
    description: Landbasedwind
    min_mw: 8000
  MinCapTag_2:
    description: CA_S_solar
    min_mw: 10000


# Generator cost data from NREL ATB

atb_data_year: 2022
atb_financial_case: Market
atb_cap_recovery_years: 20

# Alternate capital recovery periods for specific technologies, which are used to calculate
# the annual investment costs. The names are matched using str.contains rather than
# exact matches. Set parameter value to none (~) if not used.
alt_atb_cap_recovery_years:
  NaturalGas_CCAvg: 15
  NaturalGas_CTAvg: 15
  Battery: 15
  Nuclear: 40

# The year of NREL ATB data to use for matching existing generators (O&M costs)
atb_existing_year: 2020

# ATB uses an average of conventional and advanced techs. We only want advanced. To use
# standard ATB values set multipliers to 1.
# Heat rate multipliers are an average of "heat rate" and "final heat rate" multipliers.
# This parameter shoud be a set of nested dictionaries. Each lower-level dict must have
# "technology" and "tech_detail" keys uniquely identifying the resource to be modified.
# The 'ngct' dictionary is required for calculating existing CT variable O&M costs.
atb_modifiers:
  batteries:
    technology: Battery
    tech_detail: "*"
    Var_OM_Cost_per_MWh: [add, 0.15]


# Copy and modify an existing ATB new generator. This takes place BEFORE the ATB CC/CT
# modifiers. If adding a copy of CC/CT technologies, add the copy to the atb_modifiers
# parameter. Set parameter to none (~) if not adding any modified generators.
modified_atb_new_gen:
  NGCCS100:
    new_technology: NaturalGas
    new_tech_detail: CCS100
    new_cost_case: Moderate
    atb_technology: NaturalGas
    atb_tech_detail: CCCCSAvgCF
    atb_cost_case: Conservative # ATB CCCCS conservative case represents current technology.
    size_mw: 500
    capex_mw: [add, 116000]
    heat_rate: [add, 0.365]
    fixed_o_m_mw: [add, 9670]
    variable_o_m_mwh: [mul, 1.076]

# ATB doesn't have a WACC for battery tech. Need to provide a value here.
atb_battery_wacc: UtilityPV

# Format for ATB is <technology>_<tech_detail>, all are Mid cost case
# Might want to change this to list format like the new generators below
eia_atb_tech_map:
  Battery: Battery_*
  Biomass: Biopower_Dedicated
  Solar Thermal without Energy Storage: CSP_Class1
  Conventional Steam Coal: Coal_newAvgCF
  Natural Gas Fired Combined Cycle: NaturalGas_CCAvgCF #[NaturalGas_CCAvgCF, NETL_NGCC]
  Natural Gas Fired Combustion Turbine: NaturalGas_CTAvgCF
  Other_peaker: NaturalGas_CTAvgCF
  Natural Gas Internal Combustion Engine: NaturalGas_CTAvgCF
  Landfill Gas: NaturalGas_CTAvgCF
  Petroleum Liquids: NaturalGas_CTAvgCF
  Municipal Solid Waste: Biopower_Dedicated
  Other Waste Biomass: Biopower_Dedicated
  Wood/Wood Waste Biomass: Biopower_Dedicated
  Solar Photovoltaic: UtilityPV_Class1
  Geothermal: Geothermal_HydroFlash # assume installed capacity is dominated by flash

  # Check head-height, which is difference between NSD2 and 4
  Conventional Hydroelectric: Hydropower_NSD4 # Large variability based on choice
  Hydroelectric Pumped Storage: Hydropower_NSD4 # Large variability based on choice
  Small Hydroelectric: Hydropower_NSD3 # Large variability based on choice
  Onshore Wind Turbine: LandbasedWind_Class4 # All onshore wind is the same
  Offshore Wind Turbine: OffShoreWind_Class12 # Mid-range of floating offshore wind
  Nuclear: Nuclear_*
  Natural Gas Steam Turbine: Coal_newAvgCF # No gas steam turbines in ATB, using coal instead
  Solar Thermal with Energy Storage: CSP_Class1 # NEED TO CHECK THIS DEFAULT

# Offshore wind in the west will be floating
# Format for each list item is <technology>, <tech_detail>, <cost_case>, <size>
atb_new_gen:
  - [NaturalGas, CCCCSAvgCF, Conservative, 500] # ATB CCCCS conservative case represents current technology.
  - [NaturalGas, CCAvgCF, Moderate, 500]
  - [NaturalGas, CTAvgCF, Moderate, 100]
  - [LandbasedWind, Class4, Moderate, 1]
  - [OffShoreWind, Class10, Moderate, 1]
  - [UtilityPV, Class1, Moderate, 1]
  - [Battery, "*", Moderate, 1]
  # - [Nuclear, "*", Moderate, 500]


# Additional technologies can be specified in a csv file under data/additional_technologies
# Provide the filename (no path needed) in the parameter below or "~" for none.
# All technologies listed in the file will be included in the outputs unless they are
# also included in "new_gen_not_available".
additional_technologies_fn: AZ_additional_tech.csv

additional_new_gen:
  - Nuclear_mid


# Dictionary of lists with model region as key and ATB tech (string matching) in list
new_gen_not_available: ~

renewables_clusters:
  - region: CA_N
    technology: landbasedwind
    max_clusters: 2
    max_lcoe: 110
    min_capacity: 25000
  - region: CA_N
    technology: offshorewind
    turbine_type: floating
    pref_site: 1
    max_clusters: 3
    min_capacity: 40000
  - region: CA_S
    technology: landbasedwind
    max_clusters: 4
    max_lcoe: 100
    min_capacity: 45000
  - region: CA_S
    technology: utilitypv
    max_clusters: 5
    max_lcoe: 75
    min_capacity: 100000
    cap_multiplier: 0.2
  - region: WECC_AZ
    technology: utilitypv
    max_clusters: 3
    min_capacity: 100000
    cap_multiplier: 0.2

# Fuel consumption for start-up events (mmbtu/MW) from Lew et al 2013,
# Finding Flexibility: Cycling the Conventional Fleet
startup_fuel_use:
  Conventional Steam Coal: 16.5
  Natural Gas Fired Combined Cycle: 2.0
  Natural Gas Fired Combustion Turbine: 3.5
  Natural Gas Steam Turbine: 13.7

# Map user-regions to AEO Electricity Market Module (EMM) regions for cost multipliers
# IPM regions have been pre-populated in the lists below, but any user defined regions
# must also be added. This cannot be mapped automatically since user regions might
# cut across EMM regions.
# See a map at https://www.eia.gov/outlooks/aeo/pdf/nerc_map.pdf
cost_multiplier_region_map:
  TRE: [ERC_PHDL, ERC_REST, ERC_WEST]
  FRCC: [FRCC]
  MISW: [MIS_WUMS, MIS_MNWI, MIS_IA]
  MISE: [MIS_LMI]
  PJMC: [PJM_COMD]
  MISC: [MIS_IL, MIS_MO, S_D_AECI, MIS_INKY]
  SPPN: [MIS_MAPP, SPP_WAUE, SPP_NEBR, MIS_MIDA]
  SPPC: [SPP_N]
  SPPS: [SPP_WEST, SPP_SPS]
  MISS: [MIS_AMSO, MIS_WOTA, MIS_LA, MIS_AR, MIS_D_MS]
  SRSE: [S_SOU]
  SRCA: [S_VACA]
  PJMD: [PJM_Dom]
  PJMW: [PJM_West, PJM_AP, PJM_ATSI]
  PJME: [PJM_WMAC, PJM_EMAC, PJM_SMAC, PJM_PENE]
  SRCE: [S_C_TVA, S_C_KY]
  NYUP: [NY_Z_A, NY_Z_B, NY_Z_C&E, NY_Z_D, NY_Z_F, NY_Z_G-I,]
  NYCW: [NY_Z_J, NY_Z_K]
  ISNE: [NENG_ME, NENGREST, NENG_CT]
  RMRG: [WECC_CO]
  BASN: [WECC_ID, WECC_WY, WECC_UT, WECC_NNV]
  NWPP: [WECC_PNW, WECC_MT]
  CANO: [WEC_CALN, WEC_BANC, CA_N]
  CASO: [WECC_IID, WECC_SCE, WEC_LADW, WEC_SDGE, CA_S]
  SRSG: [WECC_AZ, WECC_NM, WECC_SNV]

# The keys in cost_multiplier_technology_map are technologies listed in EIA's capital
# cost assumptions document. The 2020 version is available at
# https://www.eia.gov/outlooks/archive/aeo20/assumptions/pdf/table_8.2.pdf
# Values in the list are string-matched to technologies (`<tech>_<tech_detail>`) from ATB.
# Be sure to include any custom technologies you are using from `additional_technologies_fn`
# or `modified_atb_new_gen`.
# If a value in one of the lists matches more than one technology, the cost multiplier
# will only be applied to the first technology.
# If you want to modify the regional cost corrections CSV, you can put your own copy in
# the folder PowerGenome/data/cost_multipliers.
cost_multiplier_fn: AEO_2020_regional_cost_corrections.csv
cost_multiplier_technology_map:
  Ultra-supercritical coal (USC): [Coal_newAvgCF, Coal_newHighCF]
  # IGCC: [Coal_IGCCAvgCF, Coal_IGCCAvgCF]
  USC with 30% CCS: [Coal_CCS30AvgCF, Coal_CCS30HighCF]
  USC with 90% CCS: [Coal_CCS90AvgCF, Coal_CCS90HighCF]
  CT - aeroderivative: []
  CT - industrial frame: [NaturalGas_CTAvgCF, NaturalGas_CTHighCF]
  CC - single shaft: []
  CC - multi shaft: [NaturalGas_CCAvgCF, NaturalGas_CCHighCF]
  CC with 90% CCS: [NaturalGas_CCCCSAvgCF, NaturalGas_CCCCSHighCF, NGCCS100, NaturalGas_CCS100, NaturalGas_CCS100_low,NaturalGas_CCS100_high]
  Fuel cells: []
  Advanced nuclear: [Nuclear_*, Nuclear_mid, Nuclear_low, Nuclear_high]
  Biomass: [Biopower_CofireOld, Biopower_CofireNew, Biopower_Dedicated]
  MSW - landfill gas: []
  Wind: [LandbasedWind_Class4]
  Wind offshore: [OffShoreWind_Class10]
  Solar thermal: [CSP]
  Solar PV - tracking: [UtilityPV_Class1, CommPV, ResPV]
  Battery storage: [Battery_*]
  Geothermal: [Geothermal_HydroBinary, Geothermal_HydroFlash, Geothermal_NFEGSBinary, Geothermal_DeepEGSBinary, Geothermal_NFEGSFlash, Geothermal_DeepEGSFlash]
  Conventional hydropower: [Hydropower]


# PROPOSED GENERATOR VARIABLES

eia_860m_fn: september_generator2021.xlsx

# The status codes below exclude plants where regulatory approvals have not been
# initiated or received. "Other" is also excluded.
proposed_status_included:
  - V # Under construction, more than 50 percent complete
  - TS # Construction complete, but not yet in commercial operation
  - U # Under construction, less than or equal to 50 percent complete
  - T # Regulatory approvals received. Not under construction

# Heat rates are from EIA's AEO 2019 Cost and Performace report (Table 8.2)
# or NREL's 2018 ATB. ATB technologies use 2020 heat rate values.
# All AEO heat rates are for advanced technologies and use values from the final
# heat rate column
proposed_gen_heat_rates:
  Natural Gas Fired Combined Cycle: 6.41 # ATB
  Natural Gas Fired Combustion Turbine: 9.66 # ATB
  Natural Gas Internal Combustion Engine: 8.160 # AEO


proposed_min_load:
  Natural Gas Fired Combined Cycle: 0.3 # From GE
  Natural Gas Fired Combustion Turbine: 0.3 # GE aero range is .15-.5, E3 has 0.3
  Natural Gas Internal Combustion Engine: 0.18 # From E3 assumptions


# EXTRA ADDITIONS AND RETIREMENTS

# Use this section to hard-code retirements that are not included in the most recent
# annual verion of EIA 860. The format is
# [plant_id_eia, generator_id, planned_retirement_date]
additional_retirements: ~
  # - [55853, 1, 2020]
  # - [55853, 2, 2020]
  # - [2442, 1, 2029] # Retire Four Corners before 2030
  # - [2442, 2, 2029]
  # - [2442, 3, 2029]
  # - [2442, 4, 2029]
  # - [2442, 5, 2029]
  # - [55177, A, 2031]
  # - [55177, B, 2031]
  # - [55177, ST1, 2031]

# Additions that are included in 860m but don't get caught with a spatial join.
additional_planned: ~
  # - [56545, 1, WECC_CO_NM]


######################################################################################
# LOAD GROWTH ASSUMPTIONS
# Include any load growth assumptions here

# Load from IPM is for 2011. The growth rates from 2011-2018 can be calculated using
# historical data
default_load_year: 2012
regular_load_growth_start_year: 2019
growth_scenario: REF2020

historical_load_region_map:
  TRE: [ERC_PHDL, ERC_REST, ERC_WEST]
  FLRC: [FRCC] #FRCC
  MWRCE: [MIS_WUMS]
  MWRCW: [MIS_MAPP, SPP_WAUE, SPP_NEBR, MIS_MIDA, MIS_IA, MIS_MNWI]
  NPCCNE: [NENG_ME, NENG_CT, NENGREST]
  NPCCNYWE: [NY_Z_J]
  NPCCLI: [NY_Z_K]
  NPCCUPNY: [
    NY_Z_A,
    NY_Z_B,
    NY_Z_C&E,
    NY_Z_D,
    NY_Z_F,
    NY_Z_G-I,
  ]
  RFCET: [PJM_WMAC, PJM_EMAC, PJM_SMAC, PJM_PENE, PJM_Dom]
  RFCMI: [MIS_LMI]
  RFCWT: [PJM_West, PJM_AP, PJM_ATSI, PJM_COMD]
  SERCDLT: [MIS_WOTA, MIS_LA, MIS_AMSO, MIS_AR, MIS_D_MS]
  SERCGW: [MIS_MO, S_D_AECI, MIS_IL, MIS_INKY]
  SERCSOES: [S_SOU]
  SERCCNT: [S_C_TVA, S_C_KY]
  SERCVC: [S_VACA]
  SWPPNO: [SPP_N]
  SWPPSO: [SPP_SPS, SPP_WEST]
  WECCSW: [WECC_AZ, WECC_NM, WECC_SNV]
  WECCCA: [WEC_CALN, WEC_BANC, WECC_IID, WECC_SCE, WEC_LADW, WEC_SDGE]
  WENWPP: [WECC_PNW, WECC_MT, WECC_ID, WECC_WY, WECC_UT, WECC_NNV]
  WECCRKS: [WECC_CO]

future_load_region_map:
  TRE: [ERC_PHDL, ERC_REST, ERC_WEST]
  FLRC: [FRCC] #FRCC
  MCW: [MIS_WUMS, MIS_MNWI, MIS_IA] #MISW
  MCE: [MIS_LMI] #MISE
  PJMCE: [PJM_COMD] #PJMC
  MCC: [MIS_IL, MIS_MO, S_D_AECI, MIS_INKY] #MISC
  SWPPNO: [MIS_MAPP, SPP_WAUE, SPP_NEBR, MIS_MIDA] #SPPN
  SWPPC: [SPP_N] #SPPC
  SWPPSO: [SPP_WEST, SPP_SPS] #SPPS
  MCS: [MIS_AMSO, MIS_WOTA, MIS_LA, MIS_AR, MIS_D_MS] #MISS
  SERCSOES: [S_SOU] #SRSE
  SERCE: [S_VACA] #SRCA
  PJMD: [PJM_Dom]
  PJMW: [PJM_West, PJM_AP, PJM_ATSI]
  PJME: [PJM_WMAC, PJM_EMAC, PJM_SMAC, PJM_PENE]
  SERCCNT: [S_C_TVA, S_C_KY] #SRCE
  NPCCUPNY: [
      NY_Z_A,
      NY_Z_B,
      NY_Z_C&E,
      NY_Z_D,
      NY_Z_F,
      NY_Z_G-I,
  ] #NYUP
  NENYCLI: [NY_Z_J, NY_Z_K] #NYCW
  NPCCNE: [NENG_ME, NENGREST, NENG_CT] #ISNE
  WECCRKS: [WECC_CO] #RMRG
  WECCB: [WECC_ID, WECC_WY, WECC_UT, WECC_NNV] #BASN
  WENWPP: [WECC_PNW, WECC_MT] #NWPP
  WECCCAN: [WEC_CALN, WEC_BANC] #CANO
  WECCCAS: [WECC_IID, WECC_SCE, WEC_LADW, WEC_SDGE] #CASO
  WECCSW: [WECC_AZ, WECC_NM, WECC_SNV] #SRSG

# Make none (~) if no regions are included here
alt_growth_rate: ~
  # WECC_AZ: 0.02

######################################################################################
# EIA AEO FUEL PRICE VARIABLES

# Need to make choices about fuel regions when user-defined regions cross AEO fuel regions
# I'm putting WECC_NW in the rockies because the PNW doesn't use as much coal/gas
# IPM regions are included here only as a guide. All user regions must be mapped to AEO regions.
aeo_fuel_region_map:
  mountain: [WECC_AZ, WECC_NM, WECC_CO, WECC_SNV, WECC_ID, WECC_WY, WECC_UT, WECC_NNV, WECC_NW]
  pacific: [WECC_PNW, WEC_CALN, WEC_BANC, WECC_IID, WECC_SCE, WEC_LADW, WEC_SDGE, CA_N, CA_S]
  west_south_central: [ERC_PHDL, ERC_REST, ERC_WEST, SPP_WEST, SPP_SPS, MIS_AMSO, MIS_WOTA, MIS_LA, MIS_AR]
  east_south_central: [MIS_D_MS, S_C_TVA, S_C_KY]
  south_atlantic: [FRCC, S_SOU, S_VACA, PJM_Dom, PJM_SMAC, PJM_AP]
  west_north_central: [MIS_MAPP, SPP_WAUE, SPP_NEBR, MIS_MIDA, SPP_N, MIS_MNWI, MIS_IA, MIS_MO, S_D_AECI]
  east_north_central: [MIS_WUMS, MIS_LMI, PJM_COMD, MIS_IL, MIS_INKY, PJM_West, PJM_ATSI]
  middle_atlantic: [PJM_WMAC, PJM_EMAC, PJM_SMAC, PJM_PENE, NY_Z_A, NY_Z_B, NY_Z_C&E, NY_Z_D, NY_Z_F, NY_Z_G-I, NY_Z_J, NY_Z_K]
  new_england: [NENG_ME, NENGREST, NENG_CT]

eia_series_region_names:
  mountain: MTN
  pacific: PCF
  west_south_central: WSC
  east_south_central: ESC
  south_atlantic: SOATL
  west_north_central: WNC
  east_north_central: ENC
  middle_atlantic: MDATL
  new_england: NEENGL


eia_series_fuel_names:
  coal: STC
  naturalgas: NG
  distillate: DFO
  uranium: U

# Which year of AEO to use. Note that different years have different scenario names
# so those may need to be modified accordingly.
eia_aeo_year: 2020

# This is a subset of AEO 2020 scenarios. For a full list, look at the eia open data
# page https://www.eia.gov/opendata/qb.php?category=3604304
eia_series_scenario_names:
  reference: REF2020
  low_price: LOWPRICE
  high_price: HIGHPRICE
  high_resource: HIGHOGS
  low_resource: LOWOGS

aeo_fuel_scenarios:
  coal: reference
  naturalgas: reference
  distillate: reference
  uranium: reference

aeo_fuel_usd_year: 2019


# NEED TO ADD BIOMASS AND GET FUEL COSTS - CHECK TEMOA (BILLION TON STUDY REFERENCE
tech_fuel_map:
  Conventional Steam Coal: coal
  Natural Gas Fired Combined Cycle: naturalgas
  Natural Gas Fired Combustion Turbine: naturalgas
  Natural Gas Steam Turbine: naturalgas
  Nuclear: uranium
  Petroleum Liquids: distillate
  Other_peaker: naturalgas

# The CCS fuel names (key values on right have to be in the format <fuel>_<ccslevel>,
# where the fuel matches something from "aeo_fuel_scenarios" (above
# ATB: technology_tech_detail.
ccs_fuel_map:
  #NETL_NGCC_CCS: naturalgas_ccs90
  NaturalGas_CCS100: naturalgas_ccs100
  NaturalGas_CCCCS: naturalgas_ccs90
  Coal_CCS30: coal_ccs30
  Coal_CCS90: coal_ccs90

ccs_capture_rate:
  naturalgas_ccs100: 1.0
  naturalgas_ccs90: 0.9
  coal_ccs30: 0.3
  coal_ccs90: 0.9

# Pipeline and other costs, $/tonne
ccs_disposal_cost: 10

# Carbon tax, USD/tonne
carbon_tax: 0

# tonne/MMBtu
fuel_emission_factors:
  naturalgas: 0.05306
  coal: 0.09552 # EIA value for electric power sector
  distillate: 0.07315


# Digitally extracted VOM startup costs for each generator type from the NREL Western
# wind/solar integration study
startup_vom_costs_mw:
  coal_small_sub: 2.81
  coal_large_sub: 2.69
  coal_supercritical: 2.98
  gas_cc: 1.03
  gas_large_ct: 0.77
  gas_aero_ct: 0.70
  gas_steam: 1.03
  nuclear: 5.4 # approx 2x large coal.

startup_vom_costs_usd_year: 2011

# Median cold start costs from NREL 2012 (matches digitized plot from western integration
startup_costs_type: startup_costs_per_cold_start_mw
startup_costs_per_cold_start_mw:
  coal_small_sub: 147
  coal_large_sub: 105
  coal_supercritical: 104
  gas_cc: 79
  gas_large_ct: 103
  gas_aero_ct: 32
  gas_steam: 75
  nuclear: 210 # Assumed 2x large coal plants

startup_costs_per_cold_start_usd_year: 2011

existing_startup_costs_tech_map:
  Conventional Steam Coal: coal_large_sub
  Natural Gas Fired Combined Cycle: gas_cc
  Natural Gas Fired Combustion Turbine: gas_large_ct
  Natural Gas Steam Turbine: gas_steam
  Nuclear: nuclear

new_build_startup_costs:
  Coal_CCS30: coal_supercritical
  Coal_CCS90: coal_supercritical
  Coal_IGCC: coal_supercritical
  Coal_new: coal_supercritical
  NaturalGas_CT: gas_large_ct
  NaturalGas_CC: gas_cc
  NaturalGas_CCS100: gas_cc
  Nuclear: nuclear


######################################################################################
# MODEL OUTPUTS

# This is a list of all column names included in the final generators file.
# Remove any columns that you don't want/need.
generator_columns: [
            "region",
            "Resource",
            "technology",
            "cluster",
            "R_ID",
            "Zone",
            "Num_VRE_Bins",
            "CapRes_1",
            "CapRes_2",
            "THERM",
            "VRE",
            "MUST_RUN",
            "STOR",
            "FLEX",
            "LDS",
            "HYDRO",
            "ESR_1",
            "ESR_2",
            "MinCapTag_1",
            "MinCapTag_2",
            "Min_Share",
            "Max_Share",
            "Existing_Cap_MWh",
            "Existing_Cap_MW",
            "Existing_Charge_Cap_MW",
            "num_units",
            "unmodified_existing_cap_mw",
            "New_Build",
            "Cap_Size",
            "Min_Cap_MW",
            "Max_Cap_MW",
            "Max_Cap_MWh",
            "Min_Cap_MWh",
            "Max_Charge_Cap_MW",
            "Min_Charge_Cap_MW",
            "Min_Share_percent",
            "Max_Share_percent",
            "capex_mw",
            "Inv_Cost_per_MWyr",
            "Fixed_OM_Cost_per_MWyr",
            "capex_mwh",
            "Inv_Cost_per_MWhyr",
            "Fixed_OM_Cost_per_MWhyr",
            "Var_OM_Cost_per_MWh",
            "Var_OM_Cost_per_MWh_In",
            "Inv_Cost_Charge_per_MWyr",
            "Fixed_OM_Cost_Charge_per_MWyr",
            # "Externality_cost_MWh",
            "Start_Cost_per_MW",
            "Start_Fuel_MMBTU_per_MW",
            "Heat_Rate_MMBTU_per_MWh",
            "heat_rate_mmbtu_mwh_iqr",
            "heat_rate_mmbtu_mwh_std",
            "Fuel",
            "Min_Power",
            "Self_Disch",
            "Eff_Up",
            "Eff_Down",
            "Hydro_Energy_to_Power_Ratio",
            "Ratio_power_to_energy",
            "Min_Duration",
            "Max_Duration",
            "Max_Flexible_Demand_Delay",
            "Max_Flexible_Demand_Advance",
            "Flexible_Demand_Energy_Eff",
            "Ramp_Up_Percentage",
            "Ramp_Dn_Percentage",
            "Up_Time",
            "Down_Time",
            "NACC_Eff",
            "NACC_Peak_to_Base",
            "Reg_Max",
            "Rsv_Max",
            "Reg_Cost",
            "Rsv_Cost",
            "spur_miles",
            "spur_capex",
            "offshore_spur_miles",
            "offshore_spur_capex",
            "tx_miles",
            "tx_capex",
            "interconnect_annuity"
        ]
